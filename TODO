Telegram bot:
  [ ] Send text messages
  [ ] Send Markdown / HTML formatted messages
  [ ] Send photos, videos, documents, audio files
  [ ] Send voice messages (OGG/Opus)
  [ ] Send locations (static + live location updates)
  [ ] Send polls & quizzes
  [ ] Forward and copy messages
  [ ] Reply to messages
  [ ] Delete messages
  [ ] Pin / unpin messages
  [ ] Restrict or kick users (if in groups)
  [ ] Set chat title, photo, description (for groups/channels where the bot is admin)
  [ ] Manage stickers, emoji, reactions
  [ ] Define bot commands (like /start, /help, /todo)
  [ ] Handle inline queries (@yourbot query) to return instant results
  [ ] Answer callback queries (when user presses inline keyboard buttons)
  [ ] Use custom keyboards (reply keyboard or inline keyboard)
  [ ] Get user info (IDs, usernames, languages)
  [ ] Get chat info (group/channel IDs, members count)
  [ ] Track when users join/leave a group
  [ ] Send animations (GIFs, stickers)
  [ ] Send games (via Game Platform, bot provides scoreboards)
  [ ] Use payments (Telegram Payments API)
  [ ] Send invoices & handle transactions
  [ ] Create polls, stop them, get results
  [ ] Configure privacy mode (decide if the bot sees all messages in groups or only commands)
  [ ] Add a bot description, about text, and command menu
  [ ] Set a profile picture for your bot

Telegram mini app:
  [ ] Load user identity via initData (secure Telegram authentication)
  [ ] Detect theme (light/dark mode) and adjust UI
  [ ] Apply Telegramâ€™s accent colors and fonts
  [ ] Add a main button at the bottom (e.g. "Submit")
  [ ] Configure main button text, color, and visibility dynamically
  [ ] Add secondary buttons (menu buttons in the webview)
  [ ] Expand and collapse the webview programmatically
  [ ] Close the webview and return to chat
  [ ] Trigger haptic feedback (click, success, error, heavy/light impact)
  [ ] Copy text to clipboard
  [ ] Open links inside or outside Telegram
  [ ] Send data back to the bot via `Telegram.WebApp.sendData`
  [ ] Receive bot messages that trigger the web app
  [ ] Handle invoices and payments via the Payments API
  [ ] Display success or error alerts inside the app
  [ ] Implement smooth transitions between sections/pages
  [ ] Use custom fonts, icons, and branding while respecting Telegram theme
  [ ] Implement localization based on user language from initData
  [ ] Test on mobile (iOS/Android), desktop, and Web Telegram
  [ ] Securely validate initData on the server to prevent forgery

